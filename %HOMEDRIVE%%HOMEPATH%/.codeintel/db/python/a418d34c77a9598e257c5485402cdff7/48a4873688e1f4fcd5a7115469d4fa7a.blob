<scope doc="======================== Random Number Generation&#10;========================" ilk="blob" lang="Python" name="__init__" src="d:\Program Files (x86)\Python35-32\lib\site-packages\numpy\random\__init__.py"><import line="89" module="__future__" symbol="division" /><import line="89" module="__future__" symbol="absolute_import" /><import line="89" module="__future__" symbol="print_function" /><import line="91" module="warnings" /><import line="94" module=".info" symbol="__doc__" /><import line="94" module=".info" symbol="__all__" /><import line="99" module=".mtrand" symbol="*" /><import line="120" module="numpy.testing" symbol="Tester" /><variable citdl="random_sample" line="102" name="ranf" /><scope attributes="private" doc="Return a RandomState instance.&#10;&#10;This function exists solely to assist (un)pickling.&#10;&#10;Note that the state of the RandomState returned here is irrelevant, as this function's&#10;entire purpose is to return a newly allocated RandomState whose state pickle can set.&#10;Consequently the RandomState returned by this function is a freshly allocated copy&#10;with a seed=0.&#10;&#10;See https://github.com/numpy/numpy/issues/4763 for a detailed discussion" ilk="function" line="105" lineend="118" name="__RandomState_ctor" returns="RandomState()" signature="__RandomState_ctor()" /><variable line="121" name="test" /><variable line="122" name="bench" /></scope>