<scope doc="NumPy =====" ilk="blob" lang="Python" name="__init__" src="d:\Program Files (x86)\Python35-32\lib\site-packages\numpy\__init__.py"><import line="107" module="__future__" symbol="division" /><import line="107" module="__future__" symbol="absolute_import" /><import line="107" module="__future__" symbol="print_function" /><import line="109" module="sys" /><import alias="_sys" line="160" module="sys" /><import alias="show_config" line="165" module="numpy.__config__" symbol="show" /><import alias="__git_revision__" line="171" module=".version" symbol="git_revision" /><import alias="__version__" line="172" module=".version" symbol="version" /><import line="174" module="._import_tools" symbol="PackageLoader" /><import line="180" module="." symbol="add_newdocs" /><import line="187" module=".testing" symbol="Tester" /><import line="193" module="." symbol="_distributor_init" /><import line="197" module="." symbol="core" /><import line="198" module=".core" symbol="*" /><import line="199" module="." symbol="compat" /><import line="200" module="." symbol="lib" /><import line="201" module=".lib" symbol="*" /><import line="202" module="." symbol="linalg" /><import line="203" module="." symbol="fft" /><import line="204" module="." symbol="polynomial" /><import line="205" module="." symbol="random" /><import line="206" module="." symbol="ctypeslib" /><import line="207" module="." symbol="ma" /><import alias="_mat" line="208" module="." symbol="matrixlib" /><import line="209" module=".matrixlib" symbol="*" /><import line="210" module=".compat" symbol="int" /><import line="215" module="builtins" symbol="bool" /><import line="215" module="builtins" symbol="int" /><import line="215" module="builtins" symbol="float" /><import line="215" module="builtins" symbol="complex" /><import line="215" module="builtins" symbol="object" /><import line="215" module="builtins" symbol="str" /><import line="218" module="__builtin__" symbol="bool" /><import line="218" module="__builtin__" symbol="int" /><import line="218" module="__builtin__" symbol="float" /><import line="218" module="__builtin__" symbol="complex" /><import line="218" module="__builtin__" symbol="object" /><import line="218" module="__builtin__" symbol="str" /><import line="218" module="__builtin__" symbol="str" /><import line="220" module=".core" symbol="round" /><import line="220" module=".core" symbol="abs" /><import line="220" module=".core" symbol="max" /><import line="220" module=".core" symbol="min" /><import line="230" module="warnings" /><scope classrefs="DeprecationWarning" doc="Module deprecation warning.&#10;&#10;The nose tester turns ordinary Deprecation warnings into test failures.&#10;That makes it hard to deprecate whole modules, because they get&#10;imported by default. So this is a special Deprecation warning that the&#10;nose tester will let pass without making tests fail." ilk="class" line="112" lineend="121" name="ModuleDeprecationWarning" /><scope classrefs="UserWarning" doc="Visible deprecation warning.&#10;&#10;By default, python will not show deprecation warnings, so this class&#10;can be used when a very visible warning is helpful, for example because&#10;the usage is most likely a user bug." ilk="class" line="124" lineend="132" name="VisibleDeprecationWarning" /><scope attributes="protected" doc="Special keyword value.&#10;&#10;This class may be used as the default value assigned to a&#10;deprecated keyword in order to check if it has been given a user&#10;defined value." ilk="class" line="135" lineend="142" name="_NoValue" /><variable citdl="str" line="147" name="oldnumeric" /><variable citdl="str" line="148" name="numarray" /><variable citdl="False" line="156" name="__NUMPY_SETUP__" /><variable citdl="str" line="167" name="msg" /><scope ilk="function" line="176" lineend="178" name="pkgload" returns="pkgload.loader()" signature="pkgload()"><variable citdl="PackageLoader()" line="177" name="loader" /><variable citdl="PackageLoader.__call__.__doc__" line="185" name="__doc__" /></scope><variable citdl="list" line="181" name="__all__" /><variable line="188" name="test" /><variable line="189" name="bench" /><variable line="216" name="str" /></scope>